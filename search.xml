<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown语法补充-数学公式篇</title>
      <link href="/2020/03/19/markdown-yu-fa-shu-xue-gong-shi-pian/"/>
      <url>/2020/03/19/markdown-yu-fa-shu-xue-gong-shi-pian/</url>
      
        <content type="html"><![CDATA[<h3 id="Markdown语法补充-数学公式篇"><a href="#Markdown语法补充-数学公式篇" class="headerlink" title="Markdown语法补充-数学公式篇"></a>Markdown语法补充-数学公式篇</h3><ol><li><strong>高亮代码块</strong><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a=<span class="number">0</span>;</span><br></pre></td></tr></tbody></table></figure></li><li><strong>正文中的代码</strong></li></ol><p>正文的代码:<code>int a=0</code></p><ol start="3"><li><strong>插入数学公式</strong></li></ol><p>在文档开头加上下面的javascript代码即可</p><figure class="highlight plain"><figcaption><span>type</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>效果如下:</p><p>When $a \ne 0$, there are two solutions to (ax^2 + bx + c = 0) and they are<br>$$x = {-b \pm \sqrt{b^2-4ac} \over 2a}.$$</p><p>mathjax代码如下:</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">When $a \ne 0$, there are two solutions to \(ax^2 + bx + c = 0\) and they are</span><br><span class="line">$$x = {-b \pm \sqrt{b^2-4ac} \over 2a}.$$</span><br></pre></td></tr></tbody></table></figure><p>可以点击<a href="https://www.mathjax.org/" target="_blank" rel="noopener">mathjax官网</a>自己学习</p><h3 id="下面是Mathjax的简明语法"><a href="#下面是Mathjax的简明语法" class="headerlink" title="下面是Mathjax的简明语法:"></a>下面是Mathjax的简明语法:</h3><p>(frac:分数,sum:求和,)</p><ol><li>$\sum_{i=0}^n i^2 = \frac{(n^2 + n)(2n+1)}{6}$</li></ol><p><strong>代码</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$\sum_{i=0}^n i^2 = \frac{(n^2 + n)(2n+1)}{6}$</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>$$\sum_{i=0}^n i2=\frac{(n2+n)(2n+1)}{6}$$</li></ol><p><strong>代码</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$\sum_{i=0}^n i2=\frac{(n2+n)(2n+1)}{6}$$</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>希腊字母</li></ol><p>\alpha: $\alpha$ ,  \Alpha: $\Alpha$</p><p>\beta: $\beta$, \Beta: $Beta$</p><p>\omega: $\omega$ , \Omega: $\Omega$</p><p>\gamma: $\gamma$, \Gamma: $\Gamma$</p><p>\delta: $\delta$, \Delta: $\Delta$</p><p>\theta $\theta$, \Theta: $\Theta$</p><p><strong>代码</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\alpha: $\alpha$ ,  \Alpha: $\Alpha$</span><br><span class="line"></span><br><span class="line">\beta: $\beta$, \Beta: $Beta$</span><br><span class="line"></span><br><span class="line">\omega: $\omega$ , \Omega: $\Omega$</span><br><span class="line"></span><br><span class="line">\gamma: $\gamma$, \Gamma: $\Gamma$</span><br><span class="line"></span><br><span class="line">\delta: $\delta$, \Delta: $\Delta$</span><br></pre></td></tr></tbody></table></figure><ol start="4"><li><p>上下角标</p><p>$i^2$  $x_i$ $x_i^2$ $cos\theta^2$ $sin^2\theta$</p></li></ol><p><strong>代码</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$i^2$  $x_i$ $x_i^2$ $cos\theta^2$ $sin^2\theta$</span><br></pre></td></tr></tbody></table></figure><ol start="5"><li><p>上下标组合</p><p>$6^{66}$ $x^{y^2}$</p></li></ol><p><strong>代码</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$6^{66}$ $x^{y^2}$</span><br></pre></td></tr></tbody></table></figure><ol start="6"><li>括号</li></ol><p>$\frac{(x+y)}{[\alpha+\beta]}$</p><p><strong>代码</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$\frac{(x+y)}{[\alpha+\beta]}$</span><br></pre></td></tr></tbody></table></figure><ol start="7"><li>求积分</li></ol><p>$\int$ $\iint$</p><p>$\int_{i=0}^n$</p><p>$\iint_Df(x,y)d\delta$=$\lim_{x\to\i} \sum_{i=0}^nf(a_i,b_i)\Delta\delta$</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$\int$ $\iint$</span><br><span class="line"></span><br><span class="line">$\int_{i=0}^n$</span><br><span class="line"></span><br><span class="line">$\iint_Df(x,y)d\delta$=$\lim_{x\to\\i} \sum_{i=0}^nf(a_i,b_i)\Delta\delta$</span><br></pre></td></tr></tbody></table></figure><ol start="8"><li>连乘</li></ol><p>$\prod$   $\prod_{0}^2$</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$\prod$   $\prod_{0}^2$</span><br></pre></td></tr></tbody></table></figure><ol start="9"><li>分数</li></ol><p>$\frac1 3$  $\frac{x+y}{a+b}$ $a\over b$</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$\frac1 3$  $\frac{x+y}{a+b}$ $a\over b$</span><br></pre></td></tr></tbody></table></figure><ol start="10"><li>开根号</li></ol><p>$\sqrt{x+y}$</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$\sqrt{x+y}$</span><br></pre></td></tr></tbody></table></figure><ol start="11"><li>极限</li></ol><p>$\lim_{x\to\infty}$</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$\lim_{x\to\infty}$</span><br></pre></td></tr></tbody></table></figure><ol start="12"><li>空格</li></ol><p>$a\ b$</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$a\ b$</span><br></pre></td></tr></tbody></table></figure><ol start="13"><li>矩阵</li></ol><p>$\begin{matrix} 1&amp;x&amp;x^2\ 1&amp;y&amp;y^2\ 1&amp;z&amp;z^2 \end{matrix}$<br>$\begin{pmatrix} 1&amp;x&amp;x^2\ 1&amp;y&amp;y^2\ 1&amp;z&amp;z^2 \end{pmatrix}$<br>$\begin{bmatrix} 1&amp;x&amp;x^2\ 1&amp;y&amp;y^2\ 1&amp;z&amp;z^2 \end{bmatrix}$<br>$\begin{Bmatrix} 1&amp;x&amp;x^2\ 1&amp;y&amp;y^2\ 1&amp;z&amp;z^2 \end{Bmatrix}$<br>$\begin{vmatrix} 1&amp;x&amp;x^2\ 1&amp;y&amp;y^2\ 1&amp;z&amp;z^2 \end{vmatrix}$<br>$\left[ \begin{array}{cc|c} 1&amp;2&amp;3\\ 2&amp;3&amp;4 \end{array} \right]$<br>$\left[ \begin{array}{c|cc} 1&amp;2&amp;3\\ 2&amp;3&amp;4 \end{array} \right]$</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$\begin{matrix} 1&amp;x&amp;x^2\\ 1&amp;y&amp;y^2\\ 1&amp;z&amp;z^2 \end{matrix}$</span><br><span class="line">$\begin{pmatrix} 1&amp;x&amp;x^2\\ 1&amp;y&amp;y^2\\ 1&amp;z&amp;z^2 \end{pmatrix}$</span><br><span class="line">$\begin{bmatrix} 1&amp;x&amp;x^2\\ 1&amp;y&amp;y^2\\ 1&amp;z&amp;z^2 \end{bmatrix}$</span><br><span class="line">$\begin{Bmatrix} 1&amp;x&amp;x^2\\ 1&amp;y&amp;y^2\\ 1&amp;z&amp;z^2 \end{Bmatrix}$</span><br><span class="line">$\begin{vmatrix} 1&amp;x&amp;x^2\\ 1&amp;y&amp;y^2\\ 1&amp;z&amp;z^2 \end{vmatrix}$</span><br><span class="line">$\left[ \begin{array}{cc|c} 1&amp;2&amp;3\\\ 2&amp;3&amp;4 \end{array} \right]$</span><br><span class="line">$\left[ \begin{array}{c|cc} 1&amp;2&amp;3\\\ 2&amp;3&amp;4 \end{array} \right]$</span><br></pre></td></tr></tbody></table></figure><ol start="14"><li>分段函数<br>$$f(n)=\begin{cases}n/2,&amp;\text{if $n$ is even}\3n+1,&amp;\text{if $n$ is odd}\end{cases}$$</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$f(n)=\begin{cases}n/2,&amp;\text{if $n$ is even}\\3n+1,&amp;\text{if $n$ is odd}\end{cases}$$</span><br></pre></td></tr></tbody></table></figure><ol start="15"><li>数组和表格<br>$$\begin{array}{cc|c} x_1+1^2&amp;2+x_1^3&amp;3x_1^2+1\\ 4 &amp; 5&amp; 6 \end{array}$$</li></ol><p>$$\begin{array}{c|cc} index&amp;Left&amp;Center&amp;Right\ \hline 1 &amp; 5&amp; 6&amp; 7 \ \hline 2    &amp; 8&amp;    9&amp;    10 \end{array}$$</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$\begin{array}{cc|c} x_1+1^2&amp;2+x_1^3&amp;3x_1^2+1\\\ 4 &amp; 5&amp; 6 \end{array}$$</span><br><span class="line"></span><br><span class="line">$$\begin{array}{c|cc} index&amp;Left&amp;Center&amp;Right\\ \hline 1 &amp; 5&amp; 6&amp; 7 \\ \hline 2&amp; 8&amp;9&amp;10 \end{array}$$</span><br></pre></td></tr></tbody></table></figure><h1 id="感谢-小豆芽zp-还有-芒果浩明"><a href="#感谢-小豆芽zp-还有-芒果浩明" class="headerlink" title="感谢:小豆芽zp 还有 芒果浩明"></a>感谢:<a href="https://blog.csdn.net/u012302219/article/details/51452649" target="_blank" rel="noopener">小豆芽zp</a> 还有 <a href="https://www.jianshu.com/p/12c9926ffb69" target="_blank" rel="noopener">芒果浩明</a></h1><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> -Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客基础搭建</title>
      <link href="/2020/03/18/hexo-bo-ke-ji-chu-da-jian/"/>
      <url>/2020/03/18/hexo-bo-ke-ji-chu-da-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo基础搭建步骤"><a href="#hexo基础搭建步骤" class="headerlink" title="hexo基础搭建步骤"></a>hexo基础搭建步骤</h1><p>###首先说说为啥用hexo:</p><p><strong>1.免费,没广告</strong></p><p><strong>2.CSS和html可以自己写,也可以直接用模板,美观,难度适中,适合练手</strong></p><p><strong>3.没有平台审核,方便,自由</strong></p><h2 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h2><h2 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2.安装Node.js"></a>2.安装Node.js</h2><h2 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h2><h2 id="4-Github创建个人仓库"><a href="#4-Github创建个人仓库" class="headerlink" title="4.Github创建个人仓库"></a>4.Github创建个人仓库</h2><h2 id="5-生成SSH添加到Github"><a href="#5-生成SSH添加到Github" class="headerlink" title="5.生成SSH添加到Github"></a>5.生成SSH添加到Github</h2><h2 id="6-将hexo上传到github"><a href="#6-将hexo上传到github" class="headerlink" title="6.将hexo上传到github"></a>6.将hexo上传到github</h2><h2 id="7-发布文章"><a href="#7-发布文章" class="headerlink" title="7.发布文章"></a>7.发布文章</h2><h4 id="以下的安装包都需要科学上网-否则极慢-或者用国内的镜像也可-百度一下-阿里镜像"><a href="#以下的安装包都需要科学上网-否则极慢-或者用国内的镜像也可-百度一下-阿里镜像" class="headerlink" title="(以下的安装包都需要科学上网,否则极慢,或者用国内的镜像也可(百度一下:阿里镜像))"></a>(以下的安装包都需要科学上网,否则极慢,或者用国内的镜像也可(百度一下:<font color="green">阿里镜像</font>))</h4><hr><h2 id="1-安装Git-1"><a href="#1-安装Git-1" class="headerlink" title="1.安装Git"></a>1.安装Git</h2><p><strong>廖雪峰老师的Git教程写的非常好，大家可以看一下。<a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496" target="_blank" rel="noopener">Git教程</a></strong></p><p>  windows：到git官网上下载.exe文件,Download git,安装选项还是全部默认，只不过最后一步添加路径时选择<strong>*Use Git from the Windows Command Prompt</strong>，这样我们就可以直接在命令提示符里打开git了。<br>  安装完后,记得在命令提示符输入 <strong>*git –version</strong>查看是否安装成功</p><hr><h2 id="2-安装node-js"><a href="#2-安装node-js" class="headerlink" title="2.安装node.js"></a>2.安装node.js</h2><p>  hexo是基于node.js编写的,需要安装node.js和npm工具<br>  windows：下载稳定版或者最新版都可以,进官网:<strong><a href="http://nodejs.cn/download/" target="_blank" rel="noopener">Node.js</a></strong>，安装选项全部默认，一路点击Next。<br>最后安装好之后，按Win+R打开命令提示符，输入:</p><pre><code>node -vnpm -v，</code></pre><p>如果出现版本号，那么就安装成功了。</p><p>(<a href="https://registry.npm.taobao.org1" target="_blank" rel="noopener">阿里镜像加速node.js下载</a>)</p><p><strong>或者右击任意地方,点击gitBush</strong>,在命令行输入:</p><pre><code>npm config set registry https://registry.npm.taobao.org1</code></pre><hr><h2 id="3-安装Hexo-1"><a href="#3-安装Hexo-1" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h2><p>  <strong>先创建一个文件夹MyBlog</strong>,用来存放博客文件,然后cd到这个文件夹下(或者在这个文件夹下右击,点击 git bash即可)<br>  输入下面的命令安装Hexo</p><pre><code>npm install -g hexo-cli</code></pre><p>  安装完输入</p><pre><code>hexo -v</code></pre><p>验证是否安装成功.</p><p>需要安装的东西安完了,</p><p><strong>接下来初始化hexo</strong><br>输入</p><pre><code>hexo init MyBlog(你的文件夹是啥就写啥)</code></pre><p>接着进入这个文件夹(cd或者直接在文件夹里GitBush here都可)<br>输入 </p><pre><code>npm install</code></pre><p>新建完成后，指定文件夹MyBlog目录下有：</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题** </li><li>_config.yml: 博客的配置文件**</li></ul><p>然后输入 </p><pre><code>hexo generate(简写g)</code></pre><p>再输入 </p><pre><code>hexo server(简写s)</code></pre><p>就可以再本地浏览网页了</p><p>在浏览器输入: <a href="http://localhost4000/" target="_blank" rel="noopener">http://localhost4000/</a></p><p>到这里,初始化完成,建议停一下  认真浏览一下这个初始化的页面,下面的介绍都是官方文档,详细介绍了hexo的操作方法,还有基本参数之类的<br>或者访问<strong><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo官网</a></strong>(中文的哟)</p><p>By the way,安装教程就在官网里,甚至国内镜像也有,觉得我写的不详细的话可以直接在官网看.</p><hr><h2 id="4-注册Github账号创建个人仓库"><a href="#4-注册Github账号创建个人仓库" class="headerlink" title="4.注册Github账号创建个人仓库"></a>4.注册Github账号创建个人仓库</h2><p>记得选上<strong>Initialize this repository wiyh a README</strong></p><hr><h2 id="5-生成SSH添加到Github-1"><a href="#5-生成SSH添加到Github-1" class="headerlink" title="5.生成SSH添加到Github"></a>5.生成SSH添加到Github</h2><p>在桌面右击打开 git bush 输入以下命令:</p><pre><code>git config --global user.name "yourname"git config --global user.email "youremail"</code></pre><p><strong>yourname输入Github用户名,youremail输入Github邮箱</strong></p><p>可以输入以下命令检查有没有输对</p><pre><code>git config user.namegit config user.email</code></pre><p>然后输入下面的代码,创建SSH密钥,一路回车(有个步骤是要设置密码,但是没啥用,回车跳过就行)</p><pre><code>ssh-keygen -t rsa -C "youremail"</code></pre><p>然后接着输入</p><pre><code>cat ~/.ssh/id_rsa.pub</code></pre><p><strong>输出的内容就是SSH密钥的公钥</strong>,复制一下</p><p>打开<strong><a href="http://github.com" target="_blank" rel="noopener">github</a></strong>，在头像下面点击<strong>settings</strong>，再点击<strong>SSH and GPG keys</strong>，新建一个SSH，名字随便取一个都可以，把你的<strong>id_rsa.pub里面的信息复制进去(就是刚才复制粘贴的公钥)</strong>。</p><p>最后在git bash输入</p><pre><code>ssh-T git@github.com</code></pre><p>如果没有报错,连接就建立成功了<strong>(你就可以远程控制访问github代码仓库了)</strong></p><hr><h2 id="6-将hexo上传到github-1"><a href="#6-将hexo上传到github-1" class="headerlink" title="6.将hexo上传到github"></a>6.将hexo上传到github</h2><p>这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，<strong>打开博客根目录下的_config.yml文件</strong>，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息。<br><strong>修改配置:</strong></p><pre><code>deploy:  type: git  repository: https://github.com/shw2018/shw2018.github.io  branch: master</code></pre><p>  repository填自己的github项目地址</p><p>然后在博客目录下,安装deploy-git,这样才能同步到github的远程仓库上<br>输入: </p><pre><code>npm install hexo-deployer-git --save</code></pre><p>最后输入: </p><pre><code>hexo clean //(清理public文件) hexo generate //(生成静态页面)hexo deploy //(上传到github)</code></pre><p>到这里,hexo基本搭建就完成了</p><hr><h2 id="7-发表博客"><a href="#7-发表博客" class="headerlink" title="7.发表博客"></a>7.发表博客</h2><p>在博客根目录下的source文件夹创建.md后缀的文件,windows建议下载一个<a href="http://markdownpad.com/" target="_blank" rel="noopener">MarkDownPad</a>,用MarkdownPad写博客内容即可.</p><p><a href="https://ricado-xv.github.io/2020/03/09/markdown-yu-fa/">Markdown简明语法</a></p><h1 id="超级感谢参考博客-洪卫の博客"><a href="#超级感谢参考博客-洪卫の博客" class="headerlink" title="超级感谢参考博客:洪卫の博客"></a>超级感谢参考博客:<a href="https://sunhwee.com/posts/6e8839eb.html#toc-heading-4" target="_blank" rel="noopener">洪卫の博客</a></h1><h1 id="廖雪峰老师的Git教程写的非常好，大家可以看一下。Git教程"><a href="#廖雪峰老师的Git教程写的非常好，大家可以看一下。Git教程" class="headerlink" title="廖雪峰老师的Git教程写的非常好，大家可以看一下。Git教程"></a>廖雪峰老师的Git教程写的非常好，大家可以看一下。<a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496" target="_blank" rel="noopener">Git教程</a></h1><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">😄</span></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> -hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>枚举类型的秘密</title>
      <link href="/2020/03/17/mei-ju-lei-xing-de-mi-mi/"/>
      <url>/2020/03/17/mei-ju-lei-xing-de-mi-mi/</url>
      
        <content type="html"><![CDATA[<h1 id="枚举类型的好处"><a href="#枚举类型的好处" class="headerlink" title="枚举类型的好处"></a>枚举类型的好处</h1><hr><h3 id="1-约束性好-减少错误"><a href="#1-约束性好-减少错误" class="headerlink" title="1.约束性好,减少错误:"></a>1.约束性好,减少错误:</h3><h3 id="以B站上传视频为例-视频一般有三个状态-草稿-审核-发布-可以定义位静态常量"><a href="#以B站上传视频为例-视频一般有三个状态-草稿-审核-发布-可以定义位静态常量" class="headerlink" title="以B站上传视频为例,视频一般有三个状态:草稿,审核,发布.可以定义位静态常量:"></a>以B站上传视频为例,视频一般有三个状态:草稿,审核,发布.可以定义位静态常量:</h3><h5 id="不用枚举类型"><a href="#不用枚举类型" class="headerlink" title="不用枚举类型:"></a>不用枚举类型:</h5><pre><code>  public class VideoStatus{  public static final int Draft=1;//草稿  public static final int Review=2;//审核  public static final int Published=3;//发表} void judgeVideoStatus(int status){//判断状态的函数,由于没  有类型上的约束,任意一个int值都可以,不会报错  ...}</code></pre><h5 id="用枚举类型"><a href="#用枚举类型" class="headerlink" title="用枚举类型:"></a>用枚举类型:</h5><pre><code>public enum VideoStatus{  Draft,Review,Published}void judgeVideoStatus(VideoStatus status){//这里传入参数的约束很明确,不容易出错  ...}</code></pre><hr><h3 id="2-枚举类型通常的方法"><a href="#2-枚举类型通常的方法" class="headerlink" title="2.枚举类型通常的方法:"></a>2.枚举类型通常的方法:</h3><h5 id="以后台管理系统为例-角色一般是固定的-有系统管理员-订单管理员-普通用户"><a href="#以后台管理系统为例-角色一般是固定的-有系统管理员-订单管理员-普通用户" class="headerlink" title="以后台管理系统为例,角色一般是固定的,有系统管理员,订单管理员,普通用户."></a>以后台管理系统为例,角色一般是固定的,有系统管理员,订单管理员,普通用户.</h5><pre><code>public enum UserRole{  ROLE_ROOT_ADMIN,//系统管理员  ROLE_ORDER_ADMIN,//订单管理员  ROLE_NORMAL //普通用户}UserRole role1=UserRole.ROLE_ROOT_ADMIN;UserRole role2=UserRole.ROLE_ORDER_ADMIN;UserRole role3=UserRole.ROLE_NORMAL;for(UserRole role : UserRole.values() ){  System.out.printIn(role);//打印出各个role的值}//ordinal()方法: 返回枚举常量的序数,注意从0开始System.out.printIn(role1.ordinal() );//打印出数组编号,这个是0System.out.printIn(role2.ordinal() );//打印出数组编号,这个是1System.out.printIn(role3.ordinal() );//打印出数组编号,这个是2   //compareTo()方法: 枚举常量顺序的比较System.out.printIn(role1.compareTo(role2) );//打印-1System.out.printIn(role2.compareTo(role3) );//打印-1System.out.printIn(role1.compareTo(role3) );//打印-2//name()方法: 获取枚举常量的名称System.out.printIn(role1.name() );//打印ROLE_ROOT_ADMINSystem.out.printIn(role2.name() );//打印ROLE_ORDER_ADMINSystem.out.printIn(role3.name() );//打印ROLE_NORMAL//valueOf()方法: 返回指定名称的枚举常量System.out.printIn(UserRole.valueOf("ROLE_ROOT_ADMIN") );//打印role1System.out.printIn(UserRole.valueOf("ROLE_ORDER_ADMIN") );//打印role2System.out.printIn(UserRole.valueOf("ROLE_NORMAL") );//打印role3</code></pre><h5 id="除此之外-枚举还可用于switch语句里"><a href="#除此之外-枚举还可用于switch语句里" class="headerlink" title="除此之外,枚举还可用于switch语句里"></a>除此之外,枚举还可用于switch语句里</h5><pre><code>switch(userRole){  case ROLE_NORMAL:     ...     break;  case ROLE_ORDER_ADMIN:     ...     break;  case ROLE_ROOT_ADMIN:     ...     break;}</code></pre><hr><h3 id="3-枚举类型的拓展性"><a href="#3-枚举类型的拓展性" class="headerlink" title="3.枚举类型的拓展性:"></a>3.枚举类型的拓展性:</h3><h5 id="例如在枚举里加入角色名-编码的对应关系-并且自定义一些属性-构造函数-甚至各种方法-和class一样"><a href="#例如在枚举里加入角色名-编码的对应关系-并且自定义一些属性-构造函数-甚至各种方法-和class一样" class="headerlink" title="例如在枚举里加入角色名-编码的对应关系,并且自定义一些属性,构造函数,甚至各种方法.和class一样."></a>例如在枚举里加入角色名-编码的对应关系,并且自定义一些属性,构造函数,甚至各种方法.和class一样.</h5><pre><code>  public enum UserRole{  ROLE_ROOT_ADMIN( "系统管理员",000000),  ROLE_ORDER_ADMIN( "订单管理员",100000),  ROLE_NORMAL("普通用户",200000),  ;  //自定义属性  private final String roleName;//角色名称  private final Integer roleCode;//角色编码  //自定义构造函数  UserRole( String roleName,Integer roleCode){     this.roleName=roleName;     this.roleCode=roleCode;  }  //自定义方法  public String getRoleName(){     return this.roleName;  }  public Integer getRoleCode(){     return this.roleCode;  }  public static Integer getRoleCodebyRoleName( String roleName){     for(UserRole enums: UserRole.values()){        if(enums.getRoleName.equals(roleName)){           return enums.getRoleCode;        }     }     return null;  }}</code></pre><hr><h3 id="4-枚举-接口"><a href="#4-枚举-接口" class="headerlink" title="4.枚举+接口:"></a>4.枚举+接口:</h3><h5 id="可以消灭if-else-增强代码的可读性"><a href="#可以消灭if-else-增强代码的可读性" class="headerlink" title="可以消灭if/else,增强代码的可读性"></a>可以消灭if/else,增强代码的可读性</h5><pre><code>//定义一个公用接口RoleOperation,表示不同角色的操作public interface RoleOperation{  String op();//表示某个角色可以做哪些op操作}//下面定义一个枚举类RoleEnum,用它实现RoleOperation接口public enum RoleEnum implements RoleOperation{  //系统管理员有A权限  ROLE_ROOT_ADMIN{     @override     public String op(){        return "ROLE_ROOT_ADMIN"+"has A permission";     }  },  //订单管理员有B权限  ROLE_ORDER_ADMIN{     @override     public String op(){        return "ROLE_ORDER_ADMIN"+"has B permission";     }  },  //普通用户有C权限  ROLE_NORMAL{     @override     public String op(){        return "ROLE_NORMAL"+"has C permission";     }  };}public class JudgeRole{  public String judge(String roleName){     return RoleEnum.valueOf(roleName).op();  }}</code></pre><hr><h3 id="5-枚举与设计模式"><a href="#5-枚举与设计模式" class="headerlink" title="5. 枚举与设计模式"></a>5. 枚举与设计模式</h3><h5 id="①-单例模式"><a href="#①-单例模式" class="headerlink" title="① 单例模式"></a>① 单例模式</h5><pre><code>public class Singleton{  //构造函数私有化,避免外部创建实例  private Singleton(){  }  //定义一个内部枚举  public enum SingletonEnum{     SEED;//唯一一个枚举对象     private Singleton singleton;     SingletonEnum(){        singleton=new Singleton();//这里才是真正的对象,实例化了     }     public Singleton getInstnce(){        return singleton;     }  }  //外漏对象的获取方法,这是外面获取实例的唯一入口  public static Singleton getInstnce(){     return SingletonEnum.SEED.getInstnce();//通过唯一的枚举对象完成  }</code></pre><p>   }</p><h5 id="②策略模式"><a href="#②策略模式" class="headerlink" title="②策略模式"></a>②策略模式</h5><h5 id="这里举例写一个加减乘除计算器"><a href="#这里举例写一个加减乘除计算器" class="headerlink" title="这里举例写一个加减乘除计算器"></a>这里举例写一个加减乘除计算器</h5><pre><code>public class Test{  public enum Calculator{     ADDITION{//加法        public Double execute(Double x,Double y){           return x+y;        }     },     SUBTRACTION{//减法        public Double execute(Double x,Double y){           return x-y;        }     },     MULTIPLICATION{//乘法        public Double execute(Double x,Double y){           return x*y;        }     },     DIVISION{//除法        public Double execute(Double x,Double y){           return x/y;        }     };     public abstract Double execute(Double x,Double y);//抽象方法,可以避免产生这个抽象类的实例化对象  }  public static void main(String[] args){     System.out.printIn(Calculator.ADDITION.execute(4.0,2.0));//打印6.0  }</code></pre><p>   }</p><hr><h3 id="6-专用于枚举的集合类"><a href="#6-专用于枚举的集合类" class="headerlink" title="6.专用于枚举的集合类"></a>6.专用于枚举的集合类</h3><h5 id="对应于HashMap和HashSet-枚举有专门的集合类-EnumSet和EnumMap"><a href="#对应于HashMap和HashSet-枚举有专门的集合类-EnumSet和EnumMap" class="headerlink" title="对应于HashMap和HashSet,枚举有专门的集合类:EnumSet和EnumMap"></a>对应于HashMap和HashSet,枚举有专门的集合类:EnumSet和EnumMap</h5><h5 id="以开头的枚举类型为例"><a href="#以开头的枚举类型为例" class="headerlink" title="以开头的枚举类型为例:"></a>以开头的枚举类型为例:</h5><pre><code>public enum UserRole{   ROLE_NORMAL,ROLE_ORDER_ADMIN,ROLE_ROOT_ADMIN}</code></pre><h5 id="①EnumSet"><a href="#①EnumSet" class="headerlink" title="①EnumSet"></a>①EnumSet</h5><h5 id="比如系统里来了一批人-查看他是不是枚举类型里的某个角色"><a href="#比如系统里来了一批人-查看他是不是枚举类型里的某个角色" class="headerlink" title="比如系统里来了一批人,查看他是不是枚举类型里的某个角色"></a>比如系统里来了一批人,查看他是不是枚举类型里的某个角色</h5><pre><code>//定义一个管理员角色的专属集合EnumSet&lt;UserRole&gt; userRoleForAdmin  =EnumSet.of(     UserRole.ROLE_ORDER_ADMIN,     UserRole.ROLE_ROOT_ADMIN  );//判断某个进来的用户是不是管理员Boolean isAdmin(User user){  if( userRoles.contains(user.getUserRole()))//java.lang.String里的函数,返回主体是否包含了括号里的参数  /*String s='It's great to see you here.'   Boolean c=s.contains(".")*/     return true;  return false; }</code></pre><h5 id="②EnumMap"><a href="#②EnumMap" class="headerlink" title="②EnumMap"></a>②EnumMap</h5><h5 id="EnumMap用来存放枚举类型为key的Map类型"><a href="#EnumMap用来存放枚举类型为key的Map类型" class="headerlink" title="EnumMap用来存放枚举类型为key的Map类型"></a>EnumMap用来存放枚举类型为key的Map类型</h5><h5 id="比如-系统里来了一批人-我们统计不同的角色到底有多少人"><a href="#比如-系统里来了一批人-我们统计不同的角色到底有多少人" class="headerlink" title="比如,系统里来了一批人,我们统计不同的角色到底有多少人:"></a>比如,系统里来了一批人,我们统计不同的角色到底有多少人:</h5><pre><code>Map&lt;UserRole,Integer&gt; userStatisticMap=new EnumMap&lt;&gt;(UserRole.class);for(User user : userList){  Integer num=userStatisticMap.get(user.getUserRole() );  if(null!=num){     userStatisticMap.put(user.getUserRole(),num+1);  }else{     userStatisticMap.put(user.getUserRole(),1);  }}</code></pre><h1 id="感谢微信公众号CodeSheep"><a href="#感谢微信公众号CodeSheep" class="headerlink" title="感谢微信公众号CodeSheep"></a>感谢微信公众号CodeSheep</h1><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown简明语法</title>
      <link href="/2020/03/09/markdown-yu-fa/"/>
      <url>/2020/03/09/markdown-yu-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-blog搭建教程-clik-here"><a href="#hexo-blog搭建教程-clik-here" class="headerlink" title="hexo blog搭建教程(clik here)"></a>hexo blog搭建教程<a href="https://www.itrhx.com/2018/08/15/A02-hexo-blog/" target="_blank" rel="noopener">(clik here)</a></h1><p><strong>一个人来到田纳西</strong></p><p><em>毫无疑问</em></p><p>*我做的馅饼 </p><p>是全天下*</p><p><em>最好吃的</em></p><hr><blockquote><p>引用</p><blockquote><p>引用中的引用</p></blockquote></blockquote><hr><h1 id="大标题"><a href="#大标题" class="headerlink" title="大标题"></a>大标题</h1><h2 id="小标题"><a href="#小标题" class="headerlink" title="小标题"></a>小标题</h2><p>#一级标题<br>##二级标题<br>###三级标题<br>####四级标题<br>#####五级标题<br>######六级标题</p><ul><li>无序列表</li></ul><ul><li>无序列表</li></ul><ul><li>无序列表</li></ul><ol><li>1.有序列表</li><li>2.有序列表</li><li>3.有序列表</li></ol><ul><li>嵌套列表<ul><li>嵌套列表<ul><li>嵌套列表</li></ul><ul><li>嵌套列表</li></ul></li></ul><ul><li>嵌套列表</li></ul></li></ul><hr><h2 id="参考来源-不如Blog"><a href="#参考来源-不如Blog" class="headerlink" title="参考来源: 不如Blog"></a>参考来源: <a href="http://bruce-sha.github.io" target="_blank" rel="noopener" title="不如的博客">不如Blog</a></h2><h2 id=""><a href="#" class="headerlink" title=""></a><img src="http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png" alt="Github Mark" title="GitHub Mark"></h2><p><strong><em>Reference方式索引</em></strong><br><a href="ibruce.info/2013/11/26/markdown/">不如(markdown语法)</a></p><p><img src="http://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png" alt="Github Octocat"></p><hr><p><strong>自动链接</strong><br>(还是不如的blog)<br><a href="http://ibruce.info" target="_blank" rel="noopener">http://ibruce.info</a></p><hr><p><strong>代码:行内代码</strong></p><p>  val s = “hello Markdown”<br>  println( s )</p><p><strong>代码:段落代码</strong></p><pre><code>val s= "hello Markdown"println( s )&lt;!--注释--&gt;</code></pre><hr><p><strong>转义字符</strong></p><p>\</p><p>`</p><p>*</p><p>_</p><p>{拉拉拉}</p><p>[啦啦啦]</p><p>(啦啦啦)</p><p>#</p><p>+</p><p>-</p><p>.</p><p>!</p><hr><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><pre><code>文本可以直接用html标签但是前后要加空行</code></pre><hr><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>|| <em>year</em> || <em>Temperature (low)</em> || <em>Temperature(high)</em> ||</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> -Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/03/08/hello-world/"/>
      <url>/2020/03/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
